"""
青蛙跳台阶(变态版)

题目描述：
	一只青蛙一次可以跳上1级台阶，也可以跳上2级，也可以跳上n级别。
	。求该青蛙跳上一个n级的台阶总共有多少种跳法
	(先后次序不同算不同的结果)

思路：	f(1) = 1
		f(2) = f(2-1)+f(2-2)   //f(2-2)表示2阶一次跳2阶的次数
		f(3) = f(3-1)+f(3-2)+f(3-3)
		...
		f(n) = f(n-1)+f(n-2)+f(n-3)+...+f(n-(n-1))+f(n-n)
		---->f(n) = 1  if n=0
				  = 1  if n=1
				  =2*f(n-1)  if n>=2
思路二：每个台阶都有跳与不跳两种情况(除去最后一个台阶)
		所以共有2^(n-1)种情况
"""
class Solution:
	def jumpFloorII(self,number):
		if number <= 0:
			return 0
		else:
			return pow(2,number-1)
